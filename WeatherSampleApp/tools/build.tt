<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Configuration" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".js" #>
({
	appDir: '<#= relativeBaseUrl #>',
	baseUrl: './',
	mainConfigFile: '<#= relativeBaseUrl #>/common.js',
	dir: '../Scripts/app-built',
	modules: [
		{
			name: 'common',
			include: [
				'jquery',
				'knockout',
				'knockoutMapping',
				'jsHelper',
				'bootstrap'
			]
		},
	<# foreach(string subdirectory in System.IO.Directory.GetDirectories(this.Host.ResolvePath(relativeBaseUrl + viewsLocation), "*", System.IO.SearchOption.TopDirectoryOnly)) { #>
		{
			name: '<#= GetRequireJSName(subdirectory) #>',
			exclude: ['common']
		},
	<# } #>
	],
	onBuildRead: function (moduleName, path, contents) {
		if (moduleName === 'common') {
			return contents.replace('/Scripts','/Scripts/app-built');
		}
		return contents;
	},
	optimize: 'uglify2',
	generateSourceMaps: true,
	preserveLicenseComments: false,
	wrapShim: true
})

<#+ 
	public const string relativeBaseUrl = "../Scripts";
	public const string viewsLocation = "/app/views";

	public string GetRequireJSName(string path){
	var lastFolderName = new DirectoryInfo(path).Name;
	return "." + viewsLocation + "/" + lastFolderName + "/" + lastFolderName;
} #>